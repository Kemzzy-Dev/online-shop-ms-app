name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - src/adservice/**

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
            java-version: 17
            distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
            restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
            SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          pwd
          ls
          cd src
          ./src/adservice/gradlew build sonar --info

      - name: Build Docker image
        run: |
          docker build -t adservice:latest .

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: adservice:latest
          format: json
          output: trivy-output.json

    #   - name: Push image to DockerHub
    #     uses: docker/login-action@v1
    #     with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}
    #     run: |
    #       docker tag my-image ${{ secrets.DOCKER_USERNAME }}/my-image
    #       docker push ${{ secrets.DOCKER_USERNAME }}/my-image
